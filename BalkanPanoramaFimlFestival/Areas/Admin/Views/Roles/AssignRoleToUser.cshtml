@model List<AssignRoleToUserViewModel>
@{
    ViewData["Title"] = "AssignRoleToUser";
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<div class="row">
    <div class="col-md-6 offset-md-3">
        <h2>Assign Role To User</h2>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-info" role="alert">
                @TempData["SuccessMessage"]
            </div>
        }

        @* userEmail comes from AssignRoleToUser get action method, and being send to AssignRoleToUser post action method as a parameter *@
        @* <form asp-route-userEmail="@ViewBag.userEmail" asp-area="Admin" asp-asp-controller="Roles" asp-action="AssignRoleToUser" method="post"> *@
        <form asp-route-userId="@ViewBag.userId" asp-area="Admin" asp-asp-controller="Roles" asp-action="AssignRoleToUser" method="post">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @for (int i = 0; i < Model.Count; i++)
            {
                <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" asp-for="@Model[i].Exist">
                    <label class="form-check-label" for="exampleCheck1">@Model[i].RoleName</label>

                    <input type="hidden" asp-for="@Model[i].RoleName" />
                    <input type="hidden" asp-for="@Model[i].Id" />
                </div>
            }
            <div class="form-group mt-3">
                <input type="submit" value="Assign Role" class="btn btn-primary" />
            </div>


        </form>

        <div class="mt-3">
            <a asp-controller="Home" asp-action="UserList">Back to User List</a>
        </div>
    </div>
</div>



