@model BalkanPanoramaFimlFestival.ViewModels.Account.LoginViewModel

@{
    ViewData["Title"] = "Login";
    var confirmationMessage = TempData["ConfirmationMessage"] as string;
}

<h1>@ViewData["Title"]</h1>

<form asp-action="Login" method="post">
    <div class="form-group">
        <label asp-for="Email" class="control-label"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Password" class="control-label"></label>
        <input asp-for="Password" type="password" class="form-control" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</form>

<!-- Display Model State Errors -->
@if (ViewData.ModelState.Values.Any(v => v.Errors.Any()))
{
    <div class="alert alert-danger mt-3">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    @if (!string.IsNullOrEmpty(confirmationMessage))
    {
        <script>
            window.onload = function () {
                alert('@confirmationMessage');
            };
        </script>
    }
}


<!-- Add a container for the register button -->
<div class="button-container">
    <button type="button" class="btn btn-secondary" onclick="location.href='@Url.Action("Register", "Account")'">Register</button>
</div>